{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap e54af4a10a7399d7455d","webpack:///./src/index.js","webpack:///./~/whatwg-fetch/fetch.js"],"names":[],"mappings":"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,EAAb,EACA;AACE,cAAO,SAAS,IAAT,EAAP;AACD,MAHD,MAKA;AACE,eAAQ,KAAR,CAAc,+BAA+B,OAAK,MAAlD;AACD;AAEF,IAXM,EAWJ,IAXI,CAWE,UAAC,IAAD,EAAU;AACf,YAAO,IAAP;AACH,IAbM,CAAP;AAcD;;;;;;;AC9ID;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;;AAEP,MAAK;AACL;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;;AAEA;AACA;AACA,yCAAwC,mBAAmB;AAC3D;AACA;;AAEA;AACA;AACA,mCAAkC,oBAAoB;AACtD;AACA;;AAEA;AACA;AACA,yCAAwC,4BAA4B;AACpE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA,wDAAuD;AACvD,UAAS;AACT;AACA,UAAS;AACT,+EAA8E;AAC9E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA,wCAAuC,0BAA0B;AACjE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,gCAA+B,0BAA0B,eAAe;AACxE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAO;;AAEP;AACA,MAAK;AACL;AACA;AACA,EAAC","file":"SPWidget.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SPWidget\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SPWidget\"] = factory();\n\telse\n\t\troot[\"SPWidget\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap e54af4a10a7399d7455d\n **/","import 'whatwg-fetch';\n\nexport default class SPWidget {\n  constructor(params) {\n\n    this.songId = '';\n    this.artist = '';\n    this.title = '';\n    this.previewUrl = '';\n    this.externalUrl = '';\n    this.player = new Audio();\n    this.playButton = {};\n    this.playhead = {};\n    this.timeline = {};\n\n    if (params)\n    {\n      this.songId = params.songId;\n    }\n    else\n    {\n      console.error('No parameters were provided.');\n    }\n  }\n\n  togglePlay()\n  {\n    if (this.player.paused)\n    {\n      this.player.play();\n    }\n    else\n    {\n      this.player.pause();\n    }\n  }\n\n  buttonPlaying()\n  {\n    if (this.playButton)\n    {\n      //set new class of icon\n      this.playButton.children[0].setAttribute(\"class\", \"fa fa-pause\");\n    }\n  }\n\n  buttonPaused()\n  {\n    if (this.playButton)\n    {\n      this.playButton.children[0].setAttribute(\"class\", \"fa fa-play\");\n    }\n  }\n\n  updateTime()\n  {\n    var playPercent = (this.timeline.offsetWidth - this.playhead.offsetWidth) * (this.player.currentTime / this.player.duration);\n    this.playhead.style.left = playPercent + \"px\";\n\n  }\n\n  start()\n  {\n    var songPromise = getSongData(this.songId);\n    songPromise.then((result) =>\n    {\n\n      this.title = result.name;\n      this.artist = result.artists[0].name;\n      this.imageUrl = result.album.images[0].url;\n      this.externalUrl = result.external_urls.spotify;\n      this.previewUrl = result.preview_url;\n      this.player.src = result.preview_url;\n\n      this.player.onplay = () => this.buttonPlaying();\n      this.player.onpause = () => this.buttonPaused();\n      this.player.ontimeupdate = () => this.updateTime();\n\n      console.log(this);\n      this.displayPlayer();\n\n    });\n  }\n\n\n\n  displayPlayer()\n  {\n    \n    var widget = document.getElementById('SPWidget');\n    if (widget)\n    {\n      var htmlString = `<img id=\"album-image\" src=${this.imageUrl}></img>\n                        <a href=\"${this.externalUrl}\" class=\"link-to-song\"><i class=\"fa fa-spotify\"></i></a>\n                        <div id=\"info\">\n                            <div class=\"artist\">${this.artist}</div>\n                            <div class=\"song-name\">${this.title}</div>\n                            <div id=\"play-button\" class=\"paused\">\n                                <i class=\"fa fa-play\"></i>\n                            </div>\n                            <div id=\"timeline\">\n                                <div id=\"playhead\"></div>\n                            </div>\n                        </div>`;\n\n      widget.innerHTML = htmlString;\n\n\n      this.playButton = document.getElementById('play-button');\n      this.playhead = document.getElementById('playhead');\n      this.timeline = document.getElementById('timeline');\n\n      this.playButton.onclick = () => this.togglePlay();\n\n\n  } else\n    {\n      console.log('No div with id SPWidget was found');\n    }\n  }\n\n}\n\n\nfunction getSongData(songId)\n{\n  var url = `https://api.spotify.com/v1/tracks/${songId}`;\n\n  return fetch(url).then((response) =>\n  {\n    if (response.ok)\n    {\n      return response.json();\n    }\n    else\n    {\n      console.error('Error in song id entered: ' + this.songId);\n    }\n\n  }).then( (data) => {\n      return data;\n  });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/index.js\n **/","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/whatwg-fetch/fetch.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}